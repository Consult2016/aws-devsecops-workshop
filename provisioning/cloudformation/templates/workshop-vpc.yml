AWSTemplateFormatVersion: '2010-09-09'
Description: AWS DevSecOps Workshop Environment

Parameters:
  TrustedCIDR:
    Type: String
    Description: The CIDR block to allow SSH/HTTP access to Jenkins from.
  VpcCIDR:
    Type: String
    Description: The VPC CIDR block
  SubnetCIDR:
    Type: String
    Description: The VPC CIDR block
  RubygemsCIDR:
    Type: String
    Description: The CIDR block to allow HTTP access from Jenkins to.
  GithubCIDR:
    Type: String
    Description: The CIDR block to allow HTTP access from Jenkins to.
  AmazonCIDR1:
    Type: String
    Description: The Amazon CIDR block.
  AmazonCIDR2:
    Type: String
    Description: The Amazon CIDR block.
  UbuntuCIDR:
    Type: String
    Description: The Amazon CIDR block.

Resources:
  InternetGateWay:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: ParentStackName
          Value: !Ref 'AWS::StackName'
        - Key: VPC
          Value: !Ref 'JenkinsVPC'

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref 'InternetGateWay'
      VpcId: !Ref 'JenkinsVPC'

  JenkinsVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref 'VpcCIDR'
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'

  JenkinsSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'JenkinsVPC'
      CidrBlock: !Ref 'SubnetCIDR'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'

  JenkinsRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'JenkinsVPC'
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'

  JenkinsRoute:
    Type: AWS::EC2::Route
    DependsOn: 
      - InternetGateWay
      - InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref 'JenkinsRouteTable'
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref 'InternetGateWay'

  JenkinsSubnetAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'JenkinsSubnet'
      RouteTableId: !Ref 'JenkinsRouteTable'

  JenkinsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref 'JenkinsVPC'
      GroupDescription: AWS DevSecOps Workshop Jenkins
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: !Ref 'TrustedCIDR'
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref 'TrustedCIDR'
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref 'TrustedCIDR'
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref 'SubnetCIDR'
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref 'RubygemsCIDR'
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref 'GithubCIDR'
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref 'GithubCIDR'
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref 'AmazonCIDR1'
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref 'AmazonCIDR2'
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref 'UbuntuCIDR'
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref 'UbuntuCIDR'

  JenkinsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - config.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: aws-devsecops-jenkins-role
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DescribeStackResource
                  - cloudformation:UpdateStack
                  - cloudtrail:DescribeTrails
                  - cloudtrail:GetTrailStatus
                  - cloudtrail:LookupEvents
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:CreateKeyPair
                  - ec2:CreateTags
                  - ec2:CreateSecurityGroup
                  - ec2:DescribeKeyPairs
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSubnets
                  - ec2:DescribeImages
                  - ec2:DescribeInstances
                  - ec2:DescribeVpcs
                  - ec2:RevokeSecurityGroupEgress
                  - ec2:RunInstances
                  - ec2:DeleteKeyPair
                  - ec2:DeleteSecurityGroup
                  - ec2:TerminateInstances
                  - config:DescribeComplianceByConfigRule
                  - config:DescribeComplianceByResource
                  - config:DescribeConfigRuleEvaluationStatus
                  - config:DescribeConfigRules
                  - config:DescribeConfigurationRecorders
                  - config:DescribeConfigurationRecorderStatus
                  - config:DescribeDeliveryChannels
                  - config:DescribeDeliveryChannelStatus
                  - config:GetDiscoveredResourceCounts
                  - config:GetComplianceDetailsByConfigRule
                  - config:GetComplianceDetailsByResource
                  - config:GetComplianceSummaryByConfigRule
                  - config:GetComplianceSummaryByResourceType
                  - config:GetResourceConfigHistory
                  - config:GetResources
                  - config:GetTagKeys
                  - config:ListDiscoveredResources
                  - config:DeliverConfigSnapshot
                  - config:PutConfigRule
                  - config:PutConfigurationRecorder
                  - config:PutDeliveryChannel
                  - config:PutEvaluations
                  - inspector:CreateResourceGroup
                  - inspector:CreateAssessmentTarget
                  - inspector:CreateAssessmentTemplate
                  - inspector:DescribeAssessmentRuns
                  - inspector:DescribeCrossAccountAccessRole
                  - inspector:DescribeFindings
                  - inspector:DescribeRulesPackages
                  - inspector:ListRulesPackages
                  - inspector:ListFindings
                  - inspector:StartAssessmentRun
                  - inspector:StopAssessmentRun
                  - inspector:DeleteAssessmentRun
                  - inspector:DeleteAssessmentTarget
                  - inspector:DeleteAssessmentTemplate
                  - tag:GetResources
                  - tag:GetTagKeys
                  - ssm:PutParameter
                  - iam:Get*
                  - iam:List*
                  - ec2:Describe*
                  - s3:*
                Resource: '*'

  JenkinsInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'JenkinsRole'

  JenkinsConfigRecorder:
    Type: AWS::Config::ConfigurationRecorder
    Properties:
      RoleARN: !GetAtt 'JenkinsRole.Arn'

  JenkinsConfigChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      S3BucketName: !Ref 'JenkinsConfigBucket'

  JenkinsConfigBucket:
    Type: AWS::S3::Bucket

  InspectorAssessmentTarget:
    Type: AWS::Inspector::AssessmentTarget
    Properties:
      ResourceGroupArn: !GetAtt 'InspectorResourceGroup.Arn'

  InspectorAssessmentTemplate:
    Type: AWS::Inspector::AssessmentTemplate
    Properties:
      AssessmentTargetArn: !GetAtt 'InspectorAssessmentTarget.Arn'
      DurationInSeconds: 600
      RulesPackageArns:
        - 'arn:aws:inspector:us-east-1:316112463485:rulespackage/0-R01qwB5Q'
        - 'arn:aws:inspector:us-east-1:316112463485:rulespackage/0-gEjTy7T7'
        - 'arn:aws:inspector:us-east-1:316112463485:rulespackage/0-rExsr2X8'
        - 'arn:aws:inspector:us-east-1:316112463485:rulespackage/0-gBONHN9h'

  InspectorResourceGroup:
    Type: AWS::Inspector::ResourceGroup
    Properties:
      ResourceGroupTags:
        -
          Key: InspectorAuditable
          Value: 'true'

Outputs:
  JenkinsSecurityGroup:
    Value: !Ref 'JenkinsSecurityGroup'
    Export:
      Name: 'DevSecOps-JenkinsSecurityGroup'
  JenkinsSubnetId:
    Value: !Ref 'JenkinsSubnet'
    Export:
      Name: 'DevSecOps-JenkinsSubnet'
  JenkinsInstanceProfile:
    Value: !Ref 'JenkinsInstanceProfile'
    Export:
      Name: 'DevSecOps-JenkinsInstanceProfile'
  JenkinsVPC:
    Value: !Ref 'JenkinsVPC'
    Export:
      Name: 'DevSecOps-JenkinsVPC'
  JenkinsVPCStackName:
    Value: !Ref 'AWS::StackName'
    Export:
      Name: 'DevSecOps-JenkinsVPCStackName'
  JenkinsRole:
    Value: !Ref 'JenkinsRole'
    Export:
      Name: 'DevSecOps-JenkinsRole'
  JenkinsInspectorAssessmentTemplateArn:
    Value: !GetAtt InspectorAssessmentTemplate.Arn
    Export:
      Name: 'DevSecOps-JenkinsInspectorAssessmentTemplateArn'
